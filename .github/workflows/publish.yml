name: Publish to crates.io

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  publish-pyroscope:
    name: pyroscope-lib
    runs-on: ubuntu-latest
    if: "startsWith(github.event.release.tag_name, 'lib-')"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: publish pyroscope crate
        continue-on-error: true
        run: |
          cargo login ${{ secrets.CARGO_TOKEN }}
          cargo publish
  publish-cli:
    name: pyroscope-cli
    runs-on: ubuntu-latest
    if: "startsWith(github.event.release.tag_name, 'cli-')"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: install libunwind (for pprof)
        run: sudo apt install libunwind8-dev
      - name: publish pyroscope crate
        continue-on-error: true
        run: |
          cargo login ${{ secrets.CARGO_TOKEN }}
          cargo publish --manifest-path pyroscope_cli/Cargo.toml
  publish-pprofrs:
    name: "Backend: pprofrs"
    runs-on: ubuntu-latest
    if: "startsWith(github.event.release.tag_name, 'pprofrs-')"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: publish pprofrs crate
        continue-on-error: true
        run: |
          cargo login ${{ secrets.CARGO_TOKEN }}
          cargo publish --manifest-path pyroscope_backends/pyroscope_pprofrs/Cargo.toml
  publish-rbspy:
    name: "Backend: rbspy"
    runs-on: ubuntu-latest
    if: "startsWith(github.event.release.tag_name, 'rbspy-')"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: publish rbspy crate
        continue-on-error: true
        run: |
          cargo login ${{ secrets.CARGO_TOKEN }}
          cargo publish --manifest-path pyroscope_backends/pyroscope_rbspy/Cargo.toml
  publish-pyspy:
    name: "Backend: pyspy" 
    runs-on: ubuntu-latest
    if: "startsWith(github.event.release.tag_name, 'pyspy-')"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: publish pyspy crate
        continue-on-error: true
        run: |
          cargo login ${{ secrets.CARGO_TOKEN }}
          cargo publish --manifest-path pyroscope_backends/pyroscope_pyspy/Cargo.toml
  publish-python:
    name: "Python" 
    runs-on: ubuntu-latest
    if: "startsWith(github.event.release.tag_name, 'python-')"
    steps:
      - uses: robinraju/release-downloader@v1.4
        with: 
          tag: ${{ github.event.release.tag_name }}
          fileName: "*"
          tarBall: false 
          zipBall: false 
          out-file-path: "dist"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
  publish-ruby:
    name: "Ruby" 
    runs-on: ubuntu-latest
    if: "startsWith(github.event.release.tag_name, 'ruby-')"
    env:
      GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }} 
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
      - uses: robinraju/release-downloader@v1.4
        with: 
          tag: ${{ github.event.release.tag_name }}
          fileName: "*"
          tarBall: false 
          zipBall: false 
          out-file-path: "dist"
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cd dist
          for file in *.gem; do gem push $file; done;
